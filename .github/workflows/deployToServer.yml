name: Deploy

on:
  push:
    branches: [ continious_delivery ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
          token: ${{ secrets.CONTENTTOKEN }}
          submodules: 'true'

    - name: Validate composer.json and composer.lock
      run: composer validate
      
    - name: Cache packages
      id: cache
      uses: actions/cache@v2
      with:
        path: |
          ./kirby
          ./vendor
          ~/.npm
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
        restore-keys:
          ${{ runner.os }}-

    - name: composer install
      #if: steps.cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: '12'

    - name: NPM
      run: npm install

    - name: Copy
      run: |
        mkdir -p publish && \
        rsync -av --exclude-from=deployment/rsync.ignore --exclude publish . publish/

    - name: Upload result for deploy
      uses: actions/upload-artifact@v2
      with:
        name: publish
        path: |
          publish/*
          deployment/blue_green.sh

  deploy:

    runs-on: ubuntu-latest
    needs: build
    environment: test_environment

    env:
      REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
      REMOTE_USER: ${{ secrets.REMOTE_USER }}
      REMOTE_TARGET: ${{ secrets.REMOTE_TARGET }}

    steps:
    - name: Download result from build
      uses: actions/download-artifact@v2
      with:
        name: publish
        path: publish

    - name: Set temporary remote target path
      run: |
        echo "TARGET=${REMOTE_TARGET%/}_${GITHUB_RUN_ID}" >> $GITHUB_ENV

    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

    - name: Publish
      env:
        ARGS: "-rltgoDzvO"
        SOURCE: "publish/"
      run: rsync $ARGS --rsh ssh ${SOURCE} ${REMOTE_USER}@${REMOTE_HOST}:${TARGET}

    - name: Switch Directory
      run: ssh ${REMOTE_USER}@${REMOTE_HOST} "sh ${TARGET}/deployment/blue_green.sh ${REMOTE_TARGET%/} ${TARGET}"
  