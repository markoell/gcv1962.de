name: Deploy

on:
  push:
    branches: [ continious_delivery ]

jobs:
  webpage-build:

    runs-on: ubuntu-latest
    env:
        TARGET_DIR: ${{ github.repository }}_${{ github.sha }}
    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.CONTENTTOKEN }}
        submodules: 'true'

    - name: Validate composer.json and composer.lock
      run: composer validate
      
    - name: Cache packages
      id: cache
      uses: actions/cache@v2
      with:
        path: |
          ./kirby
          ./vendor
          ~/.npm
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
        restore-keys:
          ${{ runner.os }}-

    - name: composer install
      if: steps.cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist --no-progress --no-suggest

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: '12'

    - name: NPM
      #if: steps.cache.outputs.cache-hit != 'true'
      run: npm install
      #run: npm test

    - name: Copy
      env:
        TEST: ${{ github.GITHUB_RUN_ID }}
      run: |
        mkdir -p "${TARGET_DIR}"
        rsync -av --exclude-from=scripts/Linux/rsync.ignore --exclude "${TARGET_DIR}" . "${TARGET_DIR}"\
      
    - name: Publish
      env:
        DEPLOY_KEY: ${{ secrets.SERVERKEY }}
        KNOWN_HOSTS: ${{ secrets.KNOWN_HOSTS }}
        BRANCH: ${{ github.ref }}
      run: scripts/Linux/server_publish.sh "${BRANCH}_TARGETCONNECTION" "${TARGET_DIR}" "${DEPLOY_KEY}" "${KNOWN_HOSTS}"
        
